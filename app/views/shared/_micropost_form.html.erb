<%= form_for(@micropost, url: microposts_path, html: {method: 'POST'}) do |f| %>
  <%= render 'shared/error_messages', object: f.object %>
  <%= f.hidden_field :in_reply_to, :value => @micropost.id %>
  <% if @micropost.id %>
    <%= f.hidden_field :replying, :value => true %>
  <% end %>
  <div class="field">
    <%= f.text_area :content, placeholder: "Compose new micropost...", id: :micropost_content %>
  </div>
  <%= f.submit "Post", class: "btn btn-primary" %>
  <span class="picture">
    <%= f.file_field :picture, accept: 'image/jpeg,image/gif,image/png' %>
  </span>
<% end %>

<script type="text/javascript">
  $('#micropost_picture').bind('change', function() {
    var size_in_megabytes = this.files[0].size/1024/1024;
    if (size_in_megabytes > 5) {
      alert('Maximum file size is 5MB. Please choose a smaller file.');
    }
  });

  $(function() {
    $('#micropost_content').autocomplete({
      source: "/users/auto_complete.json",
      delay: 500,
      minLength: 2,
      focus: function(event, ui) {
        return false;
      },
      select: function(event, ui) {
        cursor = $('#micropost_content').get(0).selectionStart;
        inputText = $("#micropost_content").val();
        startPosition = inputText.lastIndexOf("@")
        $('#micropost_content').val(strDel(inputText, startPosition, cursor));
        $('#micropost_content').val(strIns($("#micropost_content").val(), startPosition, ui.item.user_name));
        return false;
      }
    }).data("ui-autocomplete")._renderItem = function(ul, item) {
      return $("<li>").attr("data-value", item.user_name).data("ui-autocomplete-item", item).append("<a>" + item.user_name + "</a>").appendTo(ul);
    };
  });

  function strIns(str, idx, val){
    var res = str.slice(0, idx) + val + str.slice(idx);
    return res;
  };

  function strDel(str, startIdx, lastIdx){
    var res = str.slice(0, startIdx) + str.slice(lastIdx+1, -1);
    return res;
  };
</script>